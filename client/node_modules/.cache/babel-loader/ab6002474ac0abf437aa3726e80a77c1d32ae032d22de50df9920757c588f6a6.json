{"ast":null,"code":"var _jsxFileName = \"/Users/ayabenkabbour/Downloads/client/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// src/MapComponent.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Circle } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\n// Fix default icon issue with Leaflet in React\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png\",\n  iconUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png\",\n  shadowUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png\"\n});\n\n// const map = useMap();\n// useEffect(() => {\n//     if (position) {\n//       map.setView(position, map.getZoom());\n//     }\n//   }, [position, map]);\n\nconst MyLocationMarker = _ref => {\n  _s();\n  let {\n    position,\n    accuracy\n  } = _ref;\n  const map = useMap();\n  useEffect(() => {\n    if (position) {\n      map.setView(position, 13); // Adjust the zoom level if needed\n    }\n    if (distance <= 100) {\n      status;\n      \"You are within 100 meters of the target position.\";\n    } else {\n      status = \"You are more than 100 meters away from the target position.\";\n    }\n  }, [position, map]);\n};\n_s(MyLocationMarker, \"IoceErwr5KVGS9kN4RQ1bOkYMAg=\", true);\n_c = MyLocationMarker;\nconst MapComponent = () => {\n  _s2();\n  const [position, setPosition] = useState(null);\n  const [accuracy, setAccuracy] = useState(null);\n  useEffect(() => {\n    const success = pos => {\n      const {\n        latitude,\n        longitude,\n        accuracy\n      } = pos.coords;\n      setPosition([latitude, longitude]);\n      setAccuracy(accuracy);\n    };\n    const error = err => {\n      if (err.code === 1) {\n        alert(\"Please allow geolocation access\");\n      } else {\n        alert(\"Cannot get current location\");\n      }\n    };\n    navigator.geolocation.watchPosition(success, error);\n  }, []);\n  function getDistanceFromLatLonInMeters(lat1, lon1, lat2, lon2) {\n    const R = 6371e3; // Radius of the Earth in meters\n    const dLat = deg2rad(lat2 - lat1);\n    const dLon = deg2rad(lon2 - lon1);\n    const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in meters\n    return distance;\n  }\n  function deg2rad(deg) {\n    return deg * (Math.PI / 180);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"coordinates\",\n      children: position ? \"Latitude: \".concat(position[0], \", Longitude: \").concat(position[1]) : \"Getting location...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [32.2087638, -7.9477194],\n      zoom: 13,\n      style: {\n        height: \"80vh\",\n        width: \"100%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 OpenStreetMap contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), position && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Circle, {\n          center: position,\n          radius: accuracy / 8\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s2(MapComponent, \"YQb7R9eGeAy/DDDYT8PXke9HaGg=\");\n_c2 = MapComponent;\nexport default MapComponent;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyLocationMarker\");\n$RefreshReg$(_c2, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","MapContainer","TileLayer","Marker","Circle","L","jsxDEV","_jsxDEV","Fragment","_Fragment","Icon","Default","prototype","_getIconUrl","mergeOptions","iconRetinaUrl","iconUrl","shadowUrl","MyLocationMarker","_ref","_s","position","accuracy","map","useMap","setView","distance","status","_c","MapComponent","_s2","setPosition","setAccuracy","success","pos","latitude","longitude","coords","error","err","code","alert","navigator","geolocation","watchPosition","getDistanceFromLatLonInMeters","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","deg","PI","children","id","concat","fileName","_jsxFileName","lineNumber","columnNumber","center","zoom","style","height","width","url","attribution","radius","_c2","$RefreshReg$"],"sources":["/Users/ayabenkabbour/Downloads/client/src/App.js"],"sourcesContent":["// src/MapComponent.jsx\nimport React, { useEffect, useState } from \"react\";\nimport { MapContainer, TileLayer, Marker, Circle } from \"react-leaflet\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\n\n// Fix default icon issue with Leaflet in React\ndelete L.Icon.Default.prototype._getIconUrl;\nL.Icon.Default.mergeOptions({\n  iconRetinaUrl:\n    \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon-2x.png\",\n  iconUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-icon.png\",\n  shadowUrl: \"https://unpkg.com/leaflet@1.7.1/dist/images/marker-shadow.png\",\n});\n\n// const map = useMap();\n// useEffect(() => {\n//     if (position) {\n//       map.setView(position, map.getZoom());\n//     }\n//   }, [position, map]);\n\nconst MyLocationMarker = ({ position, accuracy }) => {\n  const map = useMap();\n\n  useEffect(() => {\n    if (position) {\n      map.setView(position, 13); // Adjust the zoom level if needed\n    }\n    if (distance <= 100) {\n      status\n        \"You are within 100 meters of the target position.\";\n    } else {\n      status=\n        \"You are more than 100 meters away from the target position.\";\n    }\n\n  }, [position, map]);\n};\n\nconst MapComponent = () => {\n  const [position, setPosition] = useState(null);\n  const [accuracy, setAccuracy] = useState(null);\n\n  useEffect(() => {\n    const success = (pos) => {\n      const { latitude, longitude, accuracy } = pos.coords;\n      setPosition([latitude, longitude]);\n      setAccuracy(accuracy);\n    };\n\n    const error = (err) => {\n      if (err.code === 1) {\n        alert(\"Please allow geolocation access\");\n      } else {\n        alert(\"Cannot get current location\");\n      }\n    };\n\n    navigator.geolocation.watchPosition(success, error);\n  }, []);\n\n  function getDistanceFromLatLonInMeters(lat1, lon1, lat2, lon2) {\n    const R = 6371e3; // Radius of the Earth in meters\n    const dLat = deg2rad(lat2 - lat1);\n    const dLon = deg2rad(lon2 - lon1);\n    const a =\n      Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n      Math.cos(deg2rad(lat1)) *\n        Math.cos(deg2rad(lat2)) *\n        Math.sin(dLon / 2) *\n        Math.sin(dLon / 2);\n    const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n    const distance = R * c; // Distance in meters\n    return distance;\n  }\n\n  function deg2rad(deg) {\n    return deg * (Math.PI / 180);\n  }\n  \n\n  return (\n    <div>\n      <div id=\"coordinates\">\n        {position\n          ? `Latitude: ${position[0]}, Longitude: ${position[1]}`\n          : \"Getting location...\"}\n      </div>\n      <MapContainer\n        center={[32.2087638, -7.9477194]}\n        zoom={13}\n        style={{ height: \"80vh\", width: \"100%\" }}\n      >\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution=\"&copy; OpenStreetMap contributors\"\n        />\n        {position && (\n          <>\n            <Marker position={position} />\n            <Circle center={position} radius={accuracy/8} />\n          </>\n        )}\n      </MapContainer>\n    </div>\n  );\n};\n\nexport default MapComponent;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}