{"ast":null,"code":"var _jsxFileName = \"/Users/ayabenkabbour/Downloads/client/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapComponent = () => {\n  _s();\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null);\n  const [circle, setCircle] = useState(null);\n  const [zoomed, setZoomed] = useState(false);\n  const [coordinates, setCoordinates] = useState('');\n  useEffect(() => {\n    const mapInstance = L.map('map').setView([51.505, -0.09], 13);\n    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n      attribution: '© OpenStreetMap'\n    }).addTo(mapInstance);\n    setMap(mapInstance);\n    navigator.geolocation.watchPosition(success, error);\n    function success(pos) {\n      const lat = pos.coords.latitude;\n      const lng = pos.coords.longitude;\n      const accuracy = pos.coords.accuracy;\n      const newCoordinates = \"Latitude: \".concat(lat, \", Longitude: \").concat(lng);\n      setCoordinates(newCoordinates);\n      if (marker) {\n        mapInstance.removeLayer(marker);\n        mapInstance.removeLayer(circle);\n      }\n      const newMarker = L.marker([lat, lng]).addTo(mapInstance);\n      const newCircle = L.circle([lat, lng], {\n        radius: accuracy\n      }).addTo(mapInstance);\n      setMarker(newMarker);\n      setCircle(newCircle);\n      if (!zoomed) {\n        mapInstance.fitBounds(newCircle.getBounds());\n        setZoomed(true);\n      }\n      mapInstance.setView([lat, lng]);\n\n      // Check distance from a target location (example: 51.505, -0.09)\n      const targetLat = 51.505;\n      const targetLng = -0.09;\n      const distance = getDistanceFromLatLonInMeters(lat, lng, targetLat, targetLng);\n      if (distance <= 100) {\n        document.getElementById('status').innerText = 'You are within 100 meters of the target position.';\n      } else {\n        document.getElementById('status').innerText = 'You are more than 100 meters away from the target position.';\n      }\n    }\n    function error(err) {\n      if (err.code === 1) {\n        alert('Please allow geolocation access');\n      } else {\n        alert('Cannot get current location');\n      }\n    }\n    function getDistanceFromLatLonInMeters(lat1, lon1, lat2, lon2) {\n      const R = 6371e3; // Radius of the Earth in meters\n      const dLat = deg2rad(lat2 - lat1);\n      const dLon = deg2rad(lon2 - lon1);\n      const a = Math.sin(dLat / 2) * Math.sin(dLat / 2) + Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      const distance = R * c; // Distance in meters\n      return distance;\n    }\n    function deg2rad(deg) {\n      return deg * (Math.PI / 180);\n    }\n  }, [marker, zoomed]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Your current position\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"coordinates\",\n      children: coordinates\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"map\",\n      style: {\n        height: '500px',\n        width: '75%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n};\n_s(MapComponent, \"yxxOSp+CKN86EUiKsu+06Q9E56o=\");\n_c = MapComponent;\nexport default MapComponent;\nvar _c;\n$RefreshReg$(_c, \"MapComponent\");","map":{"version":3,"names":["React","useEffect","useState","L","jsxDEV","_jsxDEV","MapComponent","_s","map","setMap","marker","setMarker","circle","setCircle","zoomed","setZoomed","coordinates","setCoordinates","mapInstance","setView","tileLayer","maxZoom","attribution","addTo","navigator","geolocation","watchPosition","success","error","pos","lat","coords","latitude","lng","longitude","accuracy","newCoordinates","concat","removeLayer","newMarker","newCircle","radius","fitBounds","getBounds","targetLat","targetLng","distance","getDistanceFromLatLonInMeters","document","getElementById","innerText","err","code","alert","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","a","Math","sin","cos","c","atan2","sqrt","deg","PI","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","height","width","_c","$RefreshReg$"],"sources":["/Users/ayabenkabbour/Downloads/client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport L from 'leaflet';\nimport 'leaflet/dist/leaflet.css';\n\nconst MapComponent = () => {\n  const [map, setMap] = useState(null);\n  const [marker, setMarker] = useState(null);\n  const [circle, setCircle] = useState(null);\n  const [zoomed, setZoomed] = useState(false);\n  const [coordinates, setCoordinates] = useState('');\n\n  useEffect(() => {\n    const mapInstance = L.map('map').setView([51.505, -0.09], 13);\n    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {\n      maxZoom: 19,\n      attribution: '© OpenStreetMap',\n    }).addTo(mapInstance);\n\n    setMap(mapInstance);\n\n    navigator.geolocation.watchPosition(success, error);\n\n    function success(pos) {\n      const lat = pos.coords.latitude;\n      const lng = pos.coords.longitude;\n      const accuracy = pos.coords.accuracy;\n\n      const newCoordinates = `Latitude: ${lat}, Longitude: ${lng}`;\n      setCoordinates(newCoordinates);\n\n      if (marker) {\n        mapInstance.removeLayer(marker);\n        mapInstance.removeLayer(circle);\n      }\n\n      const newMarker = L.marker([lat, lng]).addTo(mapInstance);\n      const newCircle = L.circle([lat, lng], { radius: accuracy }).addTo(mapInstance);\n\n      setMarker(newMarker);\n      setCircle(newCircle);\n\n      if (!zoomed) {\n        mapInstance.fitBounds(newCircle.getBounds());\n        setZoomed(true);\n      }\n\n      mapInstance.setView([lat, lng]);\n\n      // Check distance from a target location (example: 51.505, -0.09)\n      const targetLat = 51.505;\n      const targetLng = -0.09;\n      const distance = getDistanceFromLatLonInMeters(lat, lng, targetLat, targetLng);\n      if (distance <= 100) {\n        document.getElementById('status').innerText = 'You are within 100 meters of the target position.';\n      } else {\n        document.getElementById('status').innerText = 'You are more than 100 meters away from the target position.';\n      }\n    }\n\n    function error(err) {\n      if (err.code === 1) {\n        alert('Please allow geolocation access');\n      } else {\n        alert('Cannot get current location');\n      }\n    }\n\n    function getDistanceFromLatLonInMeters(lat1, lon1, lat2, lon2) {\n      const R = 6371e3; // Radius of the Earth in meters\n      const dLat = deg2rad(lat2 - lat1);\n      const dLon = deg2rad(lon2 - lon1);\n      const a =\n        Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n        Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * Math.sin(dLon / 2) * Math.sin(dLon / 2);\n      const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n      const distance = R * c; // Distance in meters\n      return distance;\n    }\n\n    function deg2rad(deg) {\n      return deg * (Math.PI / 180);\n    }\n  }, [marker, zoomed]);\n\n  return (\n    <div>\n      <h1>Your current position</h1>\n      <div id=\"coordinates\">{coordinates}</div>\n      <div id=\"status\"></div>\n      <div id=\"map\" style={{ height: '500px', width: '75%' }}></div>\n    </div>\n  );\n};\n\nexport default MapComponent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}